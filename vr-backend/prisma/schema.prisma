// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id
  username String   @unique
  email    String   @unique
  password String?
  roles    Role[]   @relation("UserRoles")
  resetPasswordToken    String?
  resetPasswordExpires  DateTime?
  clothing Clothing[]
  outfits  Outfit[]
  occasions Occasion[] 
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[] @relation("UserRoles")
}

model Clothing {
  id        String   @id @default(cuid())
  key       String   @unique
  url       String
  sourceUrl  String?
  name      String?
  type      String?
  brand     String?
  price     Float?
  occasion  String?
  style     String?
  fit       String?
  color     String?
  material  String?
  season    String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  mode       String   @default("closet")
  isFavorite Boolean @default(false)
  outfits     OutfitClothing[]
}

model Outfit {
  id          String    @id @default(uuid())
  name        String?   // optional
  occasion    String?   // optional - added this field
  season      String?   // optional - added this field
  notes       String?   // optional - added this field
  totalPrice  Float?    // optional
  createdAt   DateTime  @default(now())
  occasions Occasion[] @relation("OutfitOccasions")
  userId       String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  outfitClothing OutfitClothing[]
}

model OutfitClothing {
  outfitId   String
  clothingId String
  x          Float    @default(0)
  y          Float    @default(0)
  scale      Float    @default(1)
  left       Float    @default(50)   // Added this field
  bottom     Float    @default(0)    // Added this field
  width      Float    @default(10)   // Added this field
  outfit     Outfit   @relation(fields: [outfitId], references: [id], onDelete: Cascade)
  clothing   Clothing @relation(fields: [clothingId], references: [id], onDelete: Cascade)
  @@id([outfitId, clothingId])
}

model Occasion {
  id              String    @id @default(uuid())
  name            String
  customThumbnail String?   // Base64 encoded image data
  createdAt       DateTime  @default(now())
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  outfits         Outfit[]  @relation("OutfitOccasions")
}
